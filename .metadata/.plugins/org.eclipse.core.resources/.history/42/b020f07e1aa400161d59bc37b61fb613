package week3;

public class LinkedList<T> implements LinkedListInterface<T> {
	Node<T> head = null;
	Node<T> tail = null;
	int size = 0;
	
	public void addFirst(T newElement) {
		Node<T> newHead = new Node<T>(newElement);
		
		if(size == 0){
			tail = newHead;
		} else {
			newHead.setRight(head);
		}
		head = newHead;
		
		size++;
	}

	@Override
	public void addLast(T newElement) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void add(T newElement, int index) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public T getFirst() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public T getLast() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public T get(int index) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void remove(int index) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addList(LinkedListInterface<T> list) {
		// TODO Auto-generated method stub
		
	}
	
	public String toString(){
		if(size == 0) { 
			return "empty";
		}
		
		String result = "";
		
		Node<T> current = head;
		while(current != null) {
			result += current.value+"->";
			current = current.right; 
		}

		return result+"null";
	}
	
	public static void main(String[] args){
		LinkedList<Integer> test = new LinkedList<Integer>();
		test.addFirst(2);
		test.addFirst(5);
		System.out.println(test.); 
	}

}
